# Generated by Django 3.1.1 on 2020-10-03 23:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('country', '0001_initial'),
        ('job', '0001_initial'),
        ('department', '0002_auto_20201002_2237'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an Employee name', max_length=150, validators=[django.core.validators.MinLengthValidator(2, 'The name must be more than 1 character')])),
                ('job_title', models.CharField(blank=True, help_text='Enter a Job position name', max_length=150, validators=[django.core.validators.MinLengthValidator(2, 'The name must be more than 1 character')])),
                ('work_phone', models.CharField(blank=True, help_text='Enter a Work phone', max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'The name must be more than 1 character')])),
                ('work_email', models.EmailField(blank=True, help_text='Enter an Work email', max_length=254)),
                ('work_address', models.CharField(blank=True, help_text='Enter a Work address', max_length=254, validators=[django.core.validators.MinLengthValidator(2, 'The name must be more than 1 character')])),
                ('type_identification', models.CharField(choices=[('id_c', 'ID Card'), ('f_id', 'Foreigner ID'), ('pp_id', 'Passport ID'), ('other', 'Other')], default='ID_C', max_length=10)),
                ('identification_id', models.CharField(blank=True, help_text='Enter a Identification ID', max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'The name must be more than 1 character')])),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('birthday', models.DateField(blank=True)),
                ('address', models.CharField(blank=True, help_text='Enter a Address', max_length=254, validators=[django.core.validators.MinLengthValidator(2, 'The name must be more than 1 character')])),
                ('city', models.CharField(blank=True, help_text='Enter a Address', max_length=254, validators=[django.core.validators.MinLengthValidator(2, 'The name must be more than 1 character')])),
                ('phone', models.CharField(blank=True, help_text='Enter a Phone', max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'The name must be more than 1 character')])),
                ('email', models.EmailField(blank=True, help_text='Enter an Email', max_length=254)),
                ('marital', models.CharField(choices=[('single', 'Single'), ('married', 'Married'), ('cohabitant', 'Legal Cohabitant'), ('widower', 'Widower'), ('divorced', 'Divorced')], default='single', max_length=10)),
                ('children', models.IntegerField(blank=True, help_text='Enter a Number of children', verbose_name='Number of Children')),
                ('certificate', models.CharField(choices=[('bachelor', 'Bachelor'), ('degree', 'University degree'), ('specialization', 'Specialization')], max_length=25)),
                ('study_field', models.CharField(blank=True, help_text='Enter a Study field', max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'The name must be more than 1 character')])),
                ('study_school', models.CharField(blank=True, help_text='Enter a Study school', max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'The name must be more than 1 character')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country', to='country.country')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='department.department')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='job.job')),
                ('nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nationality', to='country.country')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
